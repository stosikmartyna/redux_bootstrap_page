{"version":3,"sources":["app/plants/components/PlantsContainer.jsx","app/plants/plants_types.js","app/plants/plants_actions.js","app/plants/components/PlantsForm.jsx","app/counter/components/CounterContainer.jsx","app/counter/counter_actions.js","App.js","app/plants/plants_reducers.js","app/counter/counter_reducers.js","reducers.js","store.js","index.js"],"names":["connect","state","plants","list","map","plant","item","type","types","dispatch","add","actions","props","plantInput","React","createRef","Form","onSubmit","event","preventDefault","current","value","Control","className","ref","placeholder","Button","size","variant","block","CounterContainer","counter","useSelector","useDispatch","Container","Row","onClick","App","Card","style","width","INITIAL_STATE","listName","plantsReducer","action","counterReducer","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAeeA,eAJS,SAAAC,GAAK,MAAK,CAC9BC,OAAQD,EAAMC,UAGsB,GAAzBF,EAZS,SAAC,GAAc,IAAbE,EAAY,EAAZA,OACtB,OACI,4BACKA,EAAOC,KAAKC,KAAI,SAAAC,GAAK,OAAI,4BAAKA,UCH5B,EAHG,YAGH,EAFM,eCSN,EARI,SAAAC,GAAI,MAAK,CACxBC,KAAMC,EAAiBF,S,wBC0BZN,G,MAAAA,YAAQ,MAJI,SAAAS,GAAQ,MAAK,CACpCC,IAAK,SAAAL,GAAK,OAAII,EAASE,EAAYN,QAGxBL,EAtBI,SAACY,GAChB,IAAMC,EAAaC,IAAMC,YAOzB,OACI,kBAACC,EAAA,EAAD,CAAMC,SAPO,SAACC,GACdA,EAAMC,iBACNP,EAAMF,IAAIG,EAAWO,QAAQC,OAC7BR,EAAWO,QAAQC,MAAQ,KAKvB,kBAACL,EAAA,EAAKM,QAAN,CAAcC,UAAU,eAAeC,IAAKX,EAAYN,KAAK,OAAOkB,YAAY,eAChF,kBAACC,EAAA,EAAD,CAAQH,UAAU,cAAchB,KAAK,SAASoB,KAAK,KAAKC,QAAQ,UAAUC,OAAO,GAAjF,kB,gBCXCC,G,MAAmB,WAC5B,IAAMC,EAAUC,aAAY,SAAA/B,GAAK,OAAIA,EAAM8B,WACrCtB,EAAWwB,cACjB,OACI,kBAACC,EAAA,EAAD,KACI,uCAAaH,GACb,kBAACI,EAAA,EAAD,KACI,kBAACT,EAAA,EAAD,CAAQU,QAAS,kBAAM3B,ECb5B,CACHF,KAAM,eDYgDoB,KAAK,KAAKC,QAAQ,WAAhE,KACA,kBAACF,EAAA,EAAD,CAAQU,QAAS,kBAAM3B,ECR5B,CACHF,KAAM,eDOgDoB,KAAK,KAAKC,QAAQ,WAAhE,S,QENHS,G,MAAM,WACjB,OACE,kBAACH,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAMf,UAAU,OAAOgB,MAAO,CAAEC,MAAO,UACrC,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,EAAD,S,uBCdAC,EAAgB,CAClBC,SAAU,SACVvC,KAAM,CACJ,WACA,SACA,YAmBSwC,EAfO,WAAoC,IAAnC1C,EAAkC,uDAA1BwC,EAAeG,EAAW,uCACrD,OAAQA,EAAOrC,MACb,KAAKC,EACH,OAAO,eACFP,EADL,CACYE,KAAK,GAAD,mBAAMF,EAAME,MAAZ,CAAkByC,EAAOtC,SAE3C,KAAKE,EACH,OAAO,eACFP,EADL,CACYE,KAAM,KAEpB,QACE,OAAOF,ICXA4C,EAXQ,WAAwB,IAAvB5C,EAAsB,uDAAd,EAAG2C,EAAW,uCAC1C,OAAOA,EAAOrC,MACV,IAAK,YACD,OAAON,EAAQ,EACnB,IAAK,YACD,OAAOA,EAAQ,EACnB,QACI,OAAOA,ICEJ6C,EALKC,YAAgB,CAChC7C,OAAQyC,EACRZ,QAASc,ICEEG,EALDC,YACVH,EACAI,OAAOC,8BAAgCD,OAAOC,gCCClDC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.f865b844.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PlantsContainer = ({plants}) => {\r\n    return (\r\n        <ul>\r\n            {plants.list.map(plant => <li>{plant}</li>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    plants: state.plants\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(PlantsContainer)","const ADD_PLANT = 'ADD_PLANT'\r\nconst RESET_PLANTS = 'RESET_PLANTS'\r\n\r\nexport default {\r\n    ADD_PLANT,\r\n    RESET_PLANTS\r\n}","import types from './plants_types';\r\n\r\nexport const add = item => ({\r\n    type: types.ADD_PLANT, item\r\n})\r\n\r\nexport const reset = item => ({\r\n    type: types.RESET_PLANTS, item\r\n})\r\n\r\nexport default {\r\n    add,\r\n    reset\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../plants_actions';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport './PlantsForm.css';\r\n\r\nconst PlantsForm = (props) => {\r\n    const plantInput = React.createRef();\r\n    const addPlant = (event) => {\r\n        event.preventDefault();\r\n        props.add(plantInput.current.value)\r\n        plantInput.current.value = ''\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={addPlant}>\r\n            <Form.Control className=\"form-control\" ref={plantInput} type=\"text\" placeholder=\"Plant name\" />\r\n            <Button className=\"form-button\" type=\"submit\" size=\"sm\" variant=\"success\" block={true}>\r\n                Add plant\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    add: plant => dispatch(actions.add(plant))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(PlantsForm)","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { increment, decrement } from '../counter_actions';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button, Row, Container } from 'react-bootstrap';\r\nimport './CounterContainer.css';\r\n\r\nexport const CounterContainer = () => {\r\n    const counter = useSelector(state => state.counter)\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Container>\r\n            <h1>Counter {counter}</h1>\r\n            <Row>\r\n                <Button onClick={() => dispatch(increment())} size=\"lg\" variant=\"success\">+</Button>\r\n                <Button onClick={() => dispatch(decrement())} size=\"lg\" variant=\"success\">-</Button>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","export const increment = () => {\r\n    return {\r\n        type: 'INCREMENT'\r\n    }\r\n}\r\n\r\nexport const decrement = () => {\r\n    return {\r\n        type: 'DECREMENT'\r\n    }\r\n}","import React from 'react';\nimport PlantsContainer from './app/plants/components/PlantsContainer';\nimport PlantsForm from './app/plants/components/PlantsForm';\nimport { CounterContainer } from './app/counter/components/CounterContainer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Card } from 'react-bootstrap';\nimport './App.css';\n\n\nexport const App = () => {\n  return (\n    <Container>\n      <Card className=\"card\" style={{ width: '25rem' }}>\n        <PlantsContainer />\n        <PlantsForm />\n      </Card>\n      <CounterContainer />\n    </Container>\n  );\n}","import types from './plants_types';\r\n\r\nconst INITIAL_STATE = {\r\n    listName: 'Plants',\r\n    list: [\r\n      'Monstera',\r\n      'Cactus',\r\n      'Maranta'\r\n    ]\r\n  }\r\n\r\nconst plantsReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case types.ADD_PLANT:\r\n        return {\r\n          ...state, list: [...state.list, action.item]\r\n        }\r\n      case types.RESET_PLANTS:\r\n        return {\r\n          ...state, list: []\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default plantsReducer","const counterReducer = (state = 0, action) => {\r\n    switch(action.type) {\r\n        case \"INCREMENT\":\r\n            return state + 1;\r\n        case \"DECREMENT\":\r\n            return state - 1;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer","import { combineReducers } from 'redux';\r\nimport plantsReducer from './app/plants/plants_reducers';\r\nimport counterReducer from './app/counter/counter_reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n    plants: plantsReducer,\r\n    counter: counterReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  );\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}